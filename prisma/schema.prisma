datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}


model Profile {
  id String @id @default(uuid())
  userId String @unique
  name String 
  imageUrl String @db.Text
  email String @db.Text
  server Server[]
  members Member[]
  channels Channel[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Server {
  id String @id @default(uuid())
  name String
  imageUrl String @db.Text 
  inviteCode String @unique
  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  members Member[]
  channels Channel[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([profileId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id String @id @default(uuid())
  role MemberRole @default(GUEST)

  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@index([profileId])
  @@index([serverId])
}

enum TypeEnum {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id String @id @default(uuid())
  name String
  type TypeEnum @default(TEXT)

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  
  @@index([profileId])
  @@index([serverId])
}